// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Chasing1020",
            "url": "https://github.com/Chasing1020",
            "email": "chasing1020@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/actuator/health": {
            "get": {
                "description": "Check http response health:\ncurl --location --request 'localhost:8080/actuator/health'",
                "summary": "Check http response health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/actuator/health/mysql": {
            "get": {
                "description": "Check mysql health:\ncurl --location --request 'localhost:8080/actuator/health/mysql'",
                "summary": "Check mysql health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/actuator/health/redis": {
            "get": {
                "description": "Check redis health:\ncurl --location --request 'localhost:8080/actuator/health/redis'",
                "summary": "Check redis health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/actuator/health/session": {
            "get": {
                "description": "Check session health:\ncurl --location --request 'localhost:8080/actuator/health/session'",
                "summary": "Check session health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/course/delete": {
            "delete": {
                "description": "Delete Course\ncurl --location --request DELETE 'localhost:8080/course/delete?ids=1\u0026ids=2'",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Course",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id list",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    }
                }
            }
        },
        "/course/insert": {
            "post": {
                "description": "Insert Course:\ncurl --location --request POST 'localhost:8080/course/insert' --form 'courseId'='' --form 'name'='' --form 'credit'='' --form 'time'='' --form 'departmentId'=''",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Insert Course",
                "parameters": [
                    {
                        "description": "Course",
                        "name": "Course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Course"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    }
                }
            }
        },
        "/course/query": {
            "get": {
                "description": "Query Course:\ncurl --location --request GET 'localhost:8080/course/query?ids=1\u0026ids=2\u0026ids=3\u0026limit=3\u0026offset=1'",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Query Course",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id list",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    }
                }
            }
        },
        "/course/update": {
            "put": {
                "description": "Update Course:\ncurl --location --request PUT 'localhost:8080/course/update' --form 'id'='' --form 'courseId'='' --form 'name'='' --form 'credit'='' --form 'time'='' --form 'departmentId'=''",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Course",
                "parameters": [
                    {
                        "description": "Course",
                        "name": "Course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Course"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    }
                }
            }
        },
        "/course_outline/delete": {
            "delete": {
                "description": "Delete CourseOutline\ncurl --location --request DELETE 'localhost:8080/course_outline/delete?ids=1\u0026ids=2'",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete CourseOutline",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id list",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    }
                }
            }
        },
        "/course_outline/insert": {
            "post": {
                "description": "Insert CourseOutline:\ncurl --location --request POST 'localhost:8080/course_outline/insert' --form 'term'='' --form 'courseId'='' --form 'teacherId'='' --form 'classSchedule'=''",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Insert CourseOutline",
                "parameters": [
                    {
                        "description": "CourseOutline",
                        "name": "CourseOutline",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CourseOutline"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    }
                }
            }
        },
        "/course_outline/query": {
            "get": {
                "description": "Query CourseOutline:\ncurl --location --request GET 'localhost:8080/course_outline/query?ids=1\u0026ids=2\u0026ids=3\u0026limit=3\u0026offset=1'",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Query CourseOutline",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id list",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    }
                }
            }
        },
        "/course_outline/update": {
            "put": {
                "description": "Update CourseOutline:\ncurl --location --request PUT 'localhost:8080/course_outline/update' --form 'id'='' --form 'term'='' --form 'courseId'='' --form 'teacherId'='' --form 'classSchedule'=''",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update CourseOutline",
                "parameters": [
                    {
                        "description": "CourseOutline",
                        "name": "CourseOutline",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CourseOutline"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    }
                }
            }
        },
        "/department/delete": {
            "delete": {
                "description": "Delete Department\ncurl --location --request DELETE 'localhost:8080/department/delete?ids=1\u0026ids=2'",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id list",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    }
                }
            }
        },
        "/department/insert": {
            "post": {
                "description": "Insert Department:\ncurl --location --request POST 'localhost:8080/department/insert' --form 'departmentId'='' --form 'name'='' --form 'address'='' --form 'phone'=''",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Insert Department",
                "parameters": [
                    {
                        "description": "Department",
                        "name": "Department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Department"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    }
                }
            }
        },
        "/department/query": {
            "get": {
                "description": "Query Department:\ncurl --location --request GET 'localhost:8080/department/query?ids=1\u0026ids=2\u0026ids=3\u0026limit=3\u0026offset=1'",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Query Department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id list",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    }
                }
            }
        },
        "/department/update": {
            "put": {
                "description": "Update Department:\ncurl --location --request PUT 'localhost:8080/department/update' --form 'id'='' --form 'departmentId'='' --form 'name'='' --form 'address'='' --form 'phone'=''",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Department",
                "parameters": [
                    {
                        "description": "Department",
                        "name": "Department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Department"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    }
                }
            }
        },
        "/elective/delete": {
            "delete": {
                "description": "Delete Elective\ncurl --location --request DELETE 'localhost:8080/elective/delete?ids=1\u0026ids=2'",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Elective",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id list",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    }
                }
            }
        },
        "/elective/insert": {
            "post": {
                "description": "Insert Elective:\ncurl --location --request POST 'localhost:8080/elective/insert' --form 'studentId'='' --form 'term'='' --form 'courseId'='' --form 'teacherId'='' --form 'score'=''",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Insert Elective",
                "parameters": [
                    {
                        "description": "Elective",
                        "name": "Elective",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Elective"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    }
                }
            }
        },
        "/elective/query": {
            "get": {
                "description": "Query Elective:\ncurl --location --request GET 'localhost:8080/elective/query?ids=1\u0026ids=2\u0026ids=3\u0026limit=3\u0026offset=1'",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Query Elective",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id list",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    }
                }
            }
        },
        "/elective/update": {
            "put": {
                "description": "Update Elective:\ncurl --location --request PUT 'localhost:8080/elective/update' --form 'id'='' --form 'studentId'='' --form 'term'='' --form 'courseId'='' --form 'teacherId'='' --form 'score'=''",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Elective",
                "parameters": [
                    {
                        "description": "Elective",
                        "name": "Elective",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Elective"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Parses a form and checks for specific data",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "default": "0",
                        "description": "username",
                        "name": "username",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "string",
                        "default": "0",
                        "description": "password",
                        "name": "password",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    }
                }
            }
        },
        "/logout": {
            "get": {
                "description": "Logout and delete the session",
                "produces": [
                    "application/json"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    }
                }
            }
        },
        "/student/delete": {
            "delete": {
                "description": "Delete Student\ncurl --location --request DELETE 'localhost:8080/student/delete?ids=1\u0026ids=2'",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Student",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id list",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    }
                }
            }
        },
        "/student/insert": {
            "post": {
                "description": "Insert Student:\ncurl --location --request POST 'localhost:8080/student/insert' --form 'studentId'='' --form 'password'='' --form 'name'='' --form 'sex'='' --form 'birthday'='' --form 'hometown'='' --form 'phone'='' --form 'departmentId'=''",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Insert Student",
                "parameters": [
                    {
                        "description": "Student",
                        "name": "Student",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Student"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    }
                }
            }
        },
        "/student/query": {
            "get": {
                "description": "Query Student:\ncurl --location --request GET 'localhost:8080/student/query?ids=1\u0026ids=2\u0026ids=3\u0026limit=3\u0026offset=1'",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Query Student",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id list",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    }
                }
            }
        },
        "/student/update": {
            "put": {
                "description": "Update Student:\ncurl --location --request PUT 'localhost:8080/student/update' --form 'id'='' --form 'studentId'='' --form 'password'='' --form 'name'='' --form 'sex'='' --form 'birthday'='' --form 'hometown'='' --form 'phone'='' --form 'departmentId'=''",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Student",
                "parameters": [
                    {
                        "description": "Student",
                        "name": "Student",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Student"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Resp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Course": {
            "type": "object",
            "properties": {
                "course_id": {
                    "type": "string"
                },
                "credit": {
                    "type": "integer"
                },
                "department_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "model.CourseOutline": {
            "type": "object",
            "properties": {
                "class_schedule": {
                    "type": "string"
                },
                "course_id": {
                    "type": "string"
                },
                "teacher_id": {
                    "type": "string"
                },
                "term": {
                    "type": "string"
                }
            }
        },
        "model.Department": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "department_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "model.Elective": {
            "type": "object",
            "properties": {
                "course_id": {
                    "type": "string"
                },
                "score": {
                    "type": "string"
                },
                "student_id": {
                    "type": "string"
                },
                "teacher_id": {
                    "type": "string"
                },
                "term": {
                    "type": "string"
                }
            }
        },
        "model.Resp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code http.status_code",
                    "type": "integer"
                },
                "data": {
                    "description": "Response data"
                },
                "message": {
                    "description": "Error or success message",
                    "type": "string"
                }
            }
        },
        "model.Student": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "department_id": {
                    "type": "string"
                },
                "hometown": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "sex": {
                    "type": "string"
                },
                "student_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "crud",
	Description:      "crud Project",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
